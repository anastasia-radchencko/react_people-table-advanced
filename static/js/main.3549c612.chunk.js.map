{"version":3,"sources":["components/Navbar.tsx","App.tsx","pages/NotFound/NotFound.tsx","pages/HomePage/HomePage.tsx","utils/searchHelper.ts","components/SearchLink.tsx","components/PeopleFilters.tsx","CenturiesArray.tsx","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/Person/Person.tsx","components/PeopleTable.tsx","api.ts","components/PeoplePage.tsx","Root.tsx","index.tsx"],"names":["Navbar","navbarItemClass","isActive","classNames","className","role","to","App","NotFound","HomePage","getSearchWith","currentParams","paramsToUpdate","newParams","URLSearchParams","toString","Object","entries","forEach","key","value","delete","Array","isArray","part","append","set","SearchLink","children","params","props","useSearchParams","searchParams","search","centuriesArray","PeopleFilters","setSearchParams","SearchParams","Centuries","getAll","Sex","get","centuries","sex","type","placeholder","onChange","event","newQuery","target","toLowerCase","trim","map","century","includes","filter","c","href","onClick","length","query","Loader","PersonLink","name","slug","Person","person","born","died","motherName","fatherName","mother","father","personSlug","useParams","PeopleTable","people","sort","order","sortOrderIcon","field","handleSortType","API_URL","wait","delay","Promise","resolve","setTimeout","then","fetch","response","json","PeoplePage","useState","isLoading","setIsLoading","setPeople","isError","setIsError","useEffect","getPeople","catch","finally","preparedPeople","useMemo","peopleWithParents","find","p","findParents","filtered","personData","nameContains","motherNameContains","fatherNameContains","String","Math","ceil","a","b","localeCompare","reverse","notMatchingSearch","Root","path","element","index","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.3549c612.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport { NavLink } from 'react-router-dom';\n\nexport const Navbar = () => {\n  const navbarItemClass = ({ isActive }: {\n    isActive: boolean\n  }) => classNames('navbar-item', {\n    'has-background-grey-lighter': isActive,\n  });\n\n  return (\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={navbarItemClass}\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            aria-current=\"page\"\n            className={navbarItemClass}\n            to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav>\n  );\n};\n","import { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar';\n\nimport './App.scss';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </div>\n  );\n};\n","export const NotFound = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","export const HomePage = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","export type SearchParams = {\n  [key: string]: string | string[] | null,\n};\n\n/**\n * This function prepares a correct search string\n * from a given currentParams and paramsToUpdate.\n */\nexport function getSearchWith(\n  currentParams: URLSearchParams,\n  paramsToUpdate: SearchParams, // it's our custom type\n): string {\n  // copy currentParams by creating new object from a string\n  const newParams = new URLSearchParams(\n    currentParams.toString(),\n  );\n\n  // Here is the example of paramsToUpdate\n  // {\n  //   sex: 'm',                ['sex', 'm']\n  //   order: null,             ['order', null]\n  //   centuries: ['16', '19'], ['centuries', ['16', '19']]\n  // }\n  //\n  // - params with the `null` value are deleted;\n  // - string value is set to given param key;\n  // - array of strings adds several params with the same key;\n\n  Object.entries(paramsToUpdate)\n    .forEach(([key, value]) => {\n      if (value === null) {\n        newParams.delete(key);\n      } else if (Array.isArray(value)) {\n        // we delete the key to remove old values\n        newParams.delete(key);\n\n        value.forEach(part => {\n          newParams.append(key, part);\n        });\n      } else {\n        newParams.set(key, value);\n      }\n    });\n\n  // we return a string to use it inside links\n  return newParams.toString();\n}\n","import { Link, LinkProps, useSearchParams } from 'react-router-dom';\nimport { getSearchWith, SearchParams } from '../utils/searchHelper';\n\n/**\n * To replace the the standard `Link` we take all it props except for `to`\n * along with the custom `params` prop that we use for updating the search\n */\ntype Props = Omit<LinkProps, 'to'> & {\n  params: SearchParams,\n};\n\n/**\n * SearchLink updates the given `params` in the search keeping the `pathname`\n * and the other existing search params (see `getSearchWith`)\n */\nexport const SearchLink: React.FC<Props> = ({\n  children, // this is the content between the open and closing tags\n  params, // the params to be updated in the `search`\n  ...props // all usual Link props like `className`, `style` and `id`\n}) => {\n  const [searchParams] = useSearchParams();\n\n  return (\n    <Link\n      // to={{ search: getSearchWith(searchParams, { query: 'sdf' }) }}\n      // to={{ search: getSearchWith(searchParams, { query: null }) }}\n      // to={{ search: getSearchWith(searchParams, { centuries: ['16', '18'] }) }}\n      to={{\n        search: getSearchWith(searchParams, params),\n      }}\n      {...props} // copy all the other props\n    >\n      {children}\n    </Link>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { SearchLink } from './SearchLink';\nimport { CenturiesArr } from '../CenturiesArray';\n\nconst centuriesArray = [...CenturiesArr];\n\nexport const PeopleFilters: React.FC = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const SearchParams = {\n    Centuries: searchParams.getAll('centuries') || [],\n    Sex: searchParams.get('sex') || '',\n  };\n\n  const centuries = SearchParams.Centuries;\n  const sex = SearchParams.Sex;\n\n  const clearCenturies = () => {\n    const params = new URLSearchParams(searchParams);\n\n    params.delete('centuries');\n    setSearchParams(params);\n  };\n\n  const handleSearchQuery = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const params = new URLSearchParams(searchParams);\n    const newQuery = event.target.value.toLowerCase().trim();\n\n    if (newQuery === '') {\n      params.delete('query');\n    } else {\n      params.set('query', newQuery);\n    }\n\n    setSearchParams(params);\n  };\n\n  return (\n    <nav className=\"panel\">\n      <p className=\"panel-heading\">Filters</p>\n\n      <p className=\"panel-tabs\" data-cy=\"SexFilter\">\n        <SearchLink\n          className={classNames({\n            'is-active': !sex,\n          })}\n          params={{ sex: null }}\n        >\n          All\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({\n            'is-active': sex === 'm',\n          })}\n          params={{ sex: 'm' }}\n        >\n          Male\n        </SearchLink>\n\n        <SearchLink\n          className={classNames({\n            'is-active': sex === 'f',\n          })}\n          params={{ sex: 'f' }}\n        >\n          Female\n        </SearchLink>\n      </p>\n\n      <div className=\"panel-block\">\n        <p className=\"control has-icons-left\">\n          <input\n            data-cy=\"NameFilter\"\n            type=\"search\"\n            className=\"input\"\n            placeholder=\"Search\"\n            onChange={handleSearchQuery}\n          />\n\n          <span className=\"icon is-left\">\n            <i className=\"fas fa-search\" aria-hidden=\"true\" />\n          </span>\n        </p>\n      </div>\n\n      <div className=\"panel-block\">\n        <div className=\"level is-flex-grow-1 is-mobile\" data-cy=\"CenturyFilter\">\n          <div className=\"level-left\">\n            {centuriesArray.map(century => (\n              <SearchLink\n                key={century}\n                data-cy=\"century\"\n                className={classNames(\n                  'button mr-1',\n                  { 'is-info': centuries.includes(century) },\n                )}\n                params={{\n                  centuries: centuries.includes(century)\n                    ? centuries.filter(c => c !== century)\n                    : [...centuries, century],\n                }}\n              >\n                {century}\n              </SearchLink>\n            ))}\n          </div>\n\n          <div className=\"level-right ml-4\">\n            <a\n              data-cy=\"centuryALL\"\n              className=\"button is-success is-outlined\"\n              href=\"#/people\"\n              onClick={clearCenturies}\n            >\n              All\n            </a>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"panel-block\">\n        <SearchLink\n          className={classNames('button is-link', {\n            'is-outlined': centuries.length || sex,\n          })}\n          params={{\n            centuries: [],\n            sex: null,\n            query: null,\n          }}\n        >\n          Reset all filters\n        </SearchLink>\n      </div>\n    </nav>\n  );\n};\n","export const CenturiesArr = ['16', '17', '18', '19', '20'];\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Link } from 'react-router-dom';\nimport classNames from 'classnames';\n\ntype Props = {\n  sex: string,\n  name: string,\n  slug?: string,\n};\n\nexport const PersonLink: React.FC<Props> = ({ sex, name, slug }) => {\n  return (\n    <Link\n      className={classNames({\n        'has-text-danger': sex === 'f',\n        'has-text-link': sex === 'm',\n      })}\n      to={`/people/${slug}`}\n    >\n      {name}\n    </Link>\n  );\n};\n","import { useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person as PersonType } from '../../types';\nimport { PersonLink } from '../PersonLink';\n\ntype Props = {\n  person: PersonType,\n};\n\nexport const Person: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    motherName,\n    fatherName,\n    mother,\n    father,\n    slug: personSlug,\n  } = person;\n\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': personSlug === slug,\n      })}\n    >\n      <td>\n        <PersonLink\n          name={name}\n          sex={sex}\n          slug={personSlug}\n        />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother\n          ? (\n            <PersonLink\n              name={mother.name}\n              sex={mother.sex}\n              slug={mother.slug}\n            />\n          )\n          : motherName || '-'}\n      </td>\n      <td>\n        {father\n          ? (\n            <PersonLink\n              name={father.name}\n              sex={father.sex}\n              slug={father.slug}\n            />\n          )\n          : fatherName || '-'}\n      </td>\n\n    </tr>\n  );\n};\n","import { useSearchParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person as PersonType } from '../types';\nimport { Person } from './Person';\nimport { SearchLink } from './SearchLink';\n\ntype Props = {\n  people: PersonType [],\n};\n\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  const [searchParams] = useSearchParams();\n  const sort = searchParams.get('sort') || '';\n  const order = searchParams.get('order') || '';\n\n  const sortOrderIcon = (field: string) => (\n    classNames('fas', {\n      'fa-sort': sort !== `${field}`,\n      'fa-sort-up': sort === `${field}` && order !== 'desc',\n      'fa-sort-down': sort === `${field}` && order === 'desc',\n    })\n  );\n\n  const handleSortType = (field: string) => {\n    if (!order && sort === field) {\n      return {\n        sort: field,\n        order: 'desc',\n      };\n    }\n\n    if (order && sort === field) {\n      return {\n        sort: null,\n        order: null,\n      };\n    }\n\n    return {\n      sort: field,\n      order: null,\n    };\n  };\n\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Name\n              <SearchLink\n                params={handleSortType('name')}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('name')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Sex\n              <SearchLink\n                params={handleSortType('sex')}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('sex')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Born\n              <SearchLink\n                params={handleSortType('born')}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('born')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>\n            <span className=\"is-flex is-flex-wrap-nowrap\">\n              Died\n              <SearchLink\n                params={handleSortType('died')}\n              >\n                <span className=\"icon\">\n                  <i className={sortOrderIcon('died')} />\n                </span>\n              </SearchLink>\n            </span>\n          </th>\n\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <Person\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport async function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { useEffect, useState, useMemo } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PeopleFilters } from './PeopleFilters';\nimport { Loader } from './Loader';\nimport { PeopleTable } from './PeopleTable';\nimport { getPeople } from '../api';\nimport { Person } from '../types';\n\nconst findParents = (people: Person []) => {\n  return people.map(person => {\n    const mother = people\n      .find(p => p.name === person.motherName);\n    const father = people\n      .find(p => p.name === person.fatherName);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n};\n\nexport const PeoplePage = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [people, setPeople] = useState<Person []>([]);\n  const [isError, setIsError] = useState(false);\n\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const sex = searchParams.get('sex');\n  const centuries = searchParams.getAll('centuries');\n  const sort = searchParams.get('sort');\n  const order = searchParams.get('order');\n\n  useEffect(() => {\n    setIsLoading(true);\n    getPeople()\n      .then(setPeople)\n      .catch(() => setIsError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const preparedPeople = useMemo(() => {\n    const peopleWithParents = findParents(people);\n\n    const filtered = peopleWithParents\n      .filter(personData => {\n        const nameContains = personData.name\n          ?.toLowerCase().includes(query || '');\n        const motherNameContains = personData.motherName\n          ?.toLowerCase().includes(query || '');\n        const fatherNameContains = personData.fatherName\n          ?.toLowerCase().includes(query || '');\n\n        return nameContains || motherNameContains || fatherNameContains;\n      }).filter(person => !centuries.length\n        || centuries.includes(String(Math.ceil(person.born / 100))))\n      .filter(person => !sex || person.sex === sex);\n\n    if (sort) {\n      filtered.sort((a, b) => {\n        switch (sort) {\n          case 'name':\n          case 'sex':\n            return a[sort].localeCompare(b[sort]);\n          case 'born':\n          case 'died':\n            return a[sort] - b[sort];\n\n          default:\n            return 0;\n        }\n      });\n    }\n\n    return order === 'desc' ? filtered.reverse() : filtered;\n  }, [people, query, centuries]);\n\n  const notMatchingSearch = !preparedPeople.length\n    && !isError && !isLoading;\n\n  if (isLoading) {\n    return <Loader />;\n  }\n\n  if (isError) {\n    return (\n      <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n        Something went wrong. Please try again later.\n      </p>\n    );\n  }\n\n  if (!people.length) {\n    return (\n      <p data-cy=\"noPeopleMessage\">\n        There are no people on the server\n      </p>\n    );\n  }\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"columns is-desktop is-flex-direction-row-reverse\">\n          <div className=\"column is-7-tablet is-narrow-desktop\">\n            <PeopleFilters />\n          </div>\n\n          <div className=\"column\">\n            <div className=\"box table-container\">\n              {notMatchingSearch\n               && (\n                 <p>\n                   There are no people matching the current search criteria\n                 </p>\n               )}\n\n              <PeopleTable people={preparedPeople} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n","import {\n  HashRouter as Router,\n  Routes,\n  Route,\n  Navigate,\n} from 'react-router-dom';\nimport { App } from './App';\nimport { HomePage, NotFound } from './pages';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const Root = () => (\n  <Router>\n    <Routes>\n      <Route path=\"/\" element={<App />}>\n        <Route index element={<HomePage />} />\n        <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n        <Route path=\"people\" element={<PeoplePage />}>\n          <Route path=\":slug\" element={<PeoplePage />} />\n        </Route>\n        <Route path=\"*\" element={<NotFound />} />\n      </Route>\n    </Routes>\n  </Router>\n);\n","import { createRoot } from 'react-dom/client';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { Root } from './Root';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Root />,\n  );\n"],"sourceRoot":""}